# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

 name: Java CI with Maven and Docker jobs

 on:
  push:
    branches: 
    - main

 jobs:
  javabuild:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name : Check Java version
      run: java -version
    - name: MAven version check
      run: mvn -version
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload artifact for Docker job
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.jar'
 
  docker:

    runs-on: ubuntu-latest
    needs: javabuild
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v3
    - name: Download artifact from maven job
      uses: actions/download-artifact@v3
      with:
        name: java-app
        
    - name: Logging into docker
      run: docker login ghcr.io -u attilaszegedi -p ${{ github.token }}

    - name: Build docker
      run: docker build . -t ghcr.io/attilaszegedi/cubix/1/homework/app:springboot

    - name: Publish docker
      run: docker push ghcr.io/attilaszegedi/cubix/1/homework/app:springboot
      
  dockerverify:

    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifact from maven job
      uses: actions/download-artifact@v3
      with:
        name: java-app
        
    - name: Logging into docker
      run: docker login ghcr.io -u attilaszegedi -p ${{ github.token }}

    - name: Build docker
      run: docker build . -t ghcr.io/attilaszegedi/cubix/1/homework/app:springboot

    - name: verify docker
      run: docker run -d --name test -p 8080:8080 ghcr.io/attilaszegedi/cubix/1/homework/app:springboot > /dev/null
           sleep 10
           curl --fail http://localhost:8080/application/test
           RESULT=$?
           if [ $RESULT -ne 0 ]; then
           echo "Verification failed, here are the logs"
           docker logs test
           fi
           docker stop test > /dev/null
           docker rm test > /dev/null
           exit $RESULT
      


